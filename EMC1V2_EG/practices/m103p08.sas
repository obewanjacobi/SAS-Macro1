/******************************************************
* Indirect References to Macro Variables: Practice #8 *

1)	Open m103p08.sas from the practices folder. Submit the 
	code and review the results.

2)	Explore the mc1.order_type_codes table. The Order_Type_Code 
	column contains the values 1, 2, and 3, and the Order_Type column 
	identifies the type of order associated with the code. Close the table.

3)	At the top of the program, insert an SQL query to access 
	mc1.order_type_codes and create a series of macro variables 
	named Type1, Type2, and Type3. Assign the value of the Order_Type 
	variable associated with each order type. Suppress the PROC SQL 
	output, and add a %PUT statement to write the values of Type1, Type2, 
	and Type3 to the log.

4)	Submit the PROC SQL step and the %PUT statement. Review the log. 
	Verify that the log contains TYPE1=Retail Store TYPE2=Catalog 
	TYPE3=Internet.

5)	Modify the TITLE statement to use an indirect macro variable 
	reference to the Type variable that corresponds to the value of code. 
	Submit the entire program and review the results. Verify that the 
	report contains the same two rows generated by the original report 
	and that the title is High Profit Products for Retail Store Orders.

6)	Modify the %LET statement to assign a value of 3 to the macro 
	variable, code. Resubmit the program and review the results.
		What is the report title?
******************************************************/

/*
proc print data=mc1.order_type_codes (obs=10);
run;
*/

proc sql noprint;
select Order_Type
	into :type1-
	from mc1.order_type_codes;
quit;
%put &=type1 &=type2 &=type3;

%let code=1;
title "High Profit Products for &&type&code Orders";
proc sql number;
select Product_ID format=z12.,
       Sum(Total_Retail_Price) format=dollar10.2 as GrossSales,
       Sum(Total_Retail_Price-CostPrice_Per_Unit) format=dollar10.2 as Profit
    from mc1.orders
    where Order_Type=&code 
    group by Product_ID
    having profit /grosssales > .95
    order by Profit desc;
quit;
title;
